import {
  CloudOffIcon,
  CloudyIcon,
  DropletIcon,
  GaugeIcon,
  ShieldIcon,
  SunIcon,
  ThermometerIcon,
  UmbrellaIcon,
  UmbrellaOffIcon,
  WindIcon,
  ZapIcon,
} from '@lucide/svelte'
import type { WeatherMetricKey } from './types/data'
import type { SeriesDetails } from './types/ui'

export const CHART_SERIES_DETAILS: Partial<Record<WeatherMetricKey, SeriesDetails>> = {
  temperature: {
    label: 'Temperature',
    domain: { min: [-40, -20, 0], max: [20, 40, 60] },
    style: 'line',
    icon: ThermometerIcon,
    class: '',
    unit: 'Â°',
    color: { gradientSetting: ['appearance', 'colors', 'temperatureColorStops'] },
    markExtrema: true,
    include: {
      temperature_max: {
        style: 'area',
        class: 'opacity-40',
        color: { gradientSetting: ['appearance', 'colors', 'temperatureColorStops'] },
        areaSecondParameter: 'temperature_min',
      },
    },
  },
  cloud_coverage: {
    label: 'Cloud Coverage',
    domain: { min: [0], max: [100] },
    style: 'bars',
    icon: CloudyIcon,
    iconIfZero: CloudOffIcon,
    class: 'opacity-15',
    color: { tailwind: { bg: 'bg-blue-200', fill: 'fill-blue-200', stroke: 'stroke-blue-200' } },
    unit: '%',
    hideScale: true,
    // TODO: implement invert
    invert: true,
  },
  precipitation_amount: {
    label: 'Precipitation Amount',
    domain: { min: [0], max: [20, 50] },
    style: 'bars',
    icon: UmbrellaIcon,
    iconIfZero: UmbrellaOffIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-blue-300', fill: 'fill-blue-300', stroke: 'stroke-blue-300' } },
    unit: 'mm/h',
    scaleOnRight: true,
  },
  wind_speed: {
    label: 'Wind',
    domain: { min: [0], max: [61 / 3.6, 118 / 3.6] },
    style: 'line',
    icon: WindIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-blue-100', fill: 'fill-blue-100', stroke: 'stroke-blue-100' } },
    unit: 'm/s',
    scaleOnRight: true,
    include: {
      wind_speed_gust: {
        style: 'line',
        class: 'opacity-50 [stroke-dasharray:4_8]',
        color: { tailwind: { bg: 'bg-blue-100', fill: 'fill-blue-100', stroke: 'stroke-blue-100' } },
      },
    },
  },
  relative_humidity: {
    label: 'Relative Humidity',
    domain: { min: [0], max: [100] },
    style: 'line',
    icon: DropletIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-green-300', fill: 'fill-green-300', stroke: 'stroke-green-300' } },
    unit: '%',
    scaleOnRight: true,
    hideScale: true,
  },
  pressure: {
    label: 'Pressure',
    domain: { min: [980 * 100], max: [1040 * 100] },
    style: 'line',
    icon: GaugeIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-purple-300', fill: 'fill-purple-300', stroke: 'stroke-purple-300' } },
    unit: 'hPa',
    scaleOnRight: false,
  },
  // uvi_clear_sky: {
  //   domain: [0, 12],
  //   style: 'line',
  //   icon: SoapDispenserDropletIcon,
  //   class: 'stroke-orange-300 opacity-80',
  //   formatter: (d) => d.toString(),
  //   scaleOnRight: false,
  // },
  cape: {
    label: 'CAPE',
    domain: { min: [0], max: [1000] },
    style: 'line',
    icon: ZapIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-yellow-300', fill: 'fill-yellow-300', stroke: 'stroke-yellow-300' } },
    unit: 'm2/s2',
    scaleOnRight: false,
  },
  cin: {
    label: 'CIN',
    domain: { min: [-500], max: [0] },
    style: 'line',
    icon: ShieldIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-orange-300', fill: 'fill-orange-300', stroke: 'stroke-orange-300' } },
    unit: 'J/kg',
    scaleOnRight: false,
  },
  grad: {
    label: 'Global Radiation',
    domain: { min: [-1000], max: [50_000_000] },
    style: 'line',
    icon: SunIcon,
    class: 'opacity-80',
    color: { tailwind: { bg: 'bg-yellow-300', fill: 'fill-yellow-300', stroke: 'stroke-yellow-300' } },
    unit: 'Ws/m2',
    scaleOnRight: false,
  },
} as const
